#include <iostream>
#include <conio.h>
#include <windows.h>
using namespace std;

bool gameover;
const int width = 20;
const int height = 10;
int x, y, fX, fY, score;
int tailX[100], tailY[100];
int nTail;
enum eDirecton { STOP = 0, LEFT, RIGHT, UP, DOWN };
eDirecton dir;

void Setup() {
    gameover = false;
    dir = STOP;
    x = width / 2;
    y = height / 2;
    fX = rand() % width;
    fY = rand() % height;
    score = 0;
}

void Draw() {
    system("cls");
    for (int i = 0; i < width + 2; i++)
        cout << "V";
    cout << endl;

    for (int i = 0; i < height; i++) {
        for (int j = 0; j < width; j++) {
            if (j == 0)
                cout << "V";

            if (i == y && j == x)
                cout << "Z";
            else if (i == fY && j == fX)
                cout << "*";
            else {
                bool print = false;
                for (int k = 0; k < nTail; k++) {
                    if (tailX[k] == j && tailY[k] == i) {
                        cout << "z";
                        print = true;
                    }
                }
                if (!print)
                    cout << " ";
            }

            if (j == width - 1)
                cout << "V";
        }
        cout << endl;
    }

    for (int i = 0; i < width + 2; i++)
        cout << "V";
    cout << endl;

    cout << "\nОчки:" << score << endl;
}

void Input() {
    if (_kbhit()) {
        switch (_getch()) {
        case 'a':
            dir = LEFT;
            break;
        case 'd':
            dir = RIGHT;
            break;
        case 'w':
            dir = UP;
            break;
        case 's':
            dir = DOWN;
            break;
        case 'x':
            gameover = true;
            break;
        }
    }
}

void Logic() {
    int prevX = tailX[0];
    int prevY = tailY[0];
    int prev2X, prev2Y;
    tailX[0] = x;
    tailY[0] = y;
    for (int i = 1; i < nTail; i++) {
        prev2X = tailX[i];
        prev2Y = tailY[i];
        tailX[i] = prevX;
        tailY[i] = prevY;
        prevX = prev2X;
        prevY = prev2Y;
    }
    switch (dir) {
    case LEFT:
        x--;
        break;
    case RIGHT:
        x++;
        break;
    case UP:
        y--;
        break;
    case DOWN:
        y++;
        break;
    default:
        break;
    }

    if (x >= width)
        x = 0;
    else if (x < 0)
        x = width - 1;

    if (y >= height)
        y = 0;
    else if (y < 0)
        y = height - 1;

    for (int i = 0; i < nTail; i++)
        if (tailX[i] == x && tailY[i] == y)
            gameover = true;

    if (x == fX && y == fY) {
        score += 10;
        fX = rand() % width;
        fY = rand() % height;
        nTail++;
    }
}

int main() {

    setlocale(0, "");
    cout << "[+] RUSSIAN ZNAKE\n\n";
    cout << "[1] low\n";
    cout << "[2] midle\n";
    cout << "[3] high\n\n";
    cout << "[+] Введите уровень сложности: ";
    int k;
    cin >> k;
    if (k == 1) {
        {
            Setup();
            while (!gameover) {

                Draw();
                Input();
                Logic();
                Sleep(1000); // добавь паузу, чтобы змейка не двигалась слишком быстро
            }
            return 0;
        }
    }
    else if (k == 2) {
        Setup();
        while (!gameover) {

            Draw();
            Input();
            Logic();
            Sleep(100); // добавь паузу, чтобы змейка не двигалась слишком быстро
        }
        return 0;
    }
    else if (k == 3) {
        Setup();
        while (!gameover) {

            Draw();
            Input();
            Logic();
            Sleep(1); // добавь паузу, чтобы змейка не двигалась слишком быстро
        }
        return 0;
    }
}

